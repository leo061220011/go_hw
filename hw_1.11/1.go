// Задача 1: Параллельное выполнение задач
// Описание: Напишите программу, которая запускает три горутины.
// Каждая горутина должна выводить сообщение о выполнении своей задачи и завершаться.
// Основная функция должна дождаться завершения всех горутин перед завершением программы.
// Требования:

// Используйте sync.WaitGroup для синхронизации.
// Каждая горутина выводит сообщение вида: "Горутина X начала работу" и "Горутина X завершила работу".
// В основном потоке дождитесь завершения всех горутин.
package main

import (
	"fmt"
	"sync"
)

var wg sync.WaitGroup

func tasker(num int) {
	fmt.Printf("Горутина %d начала работу\n", num)
	defer wg.Done()
	fmt.Printf("Горутина %d завершила работу\n", num)
}

func main() {
	for i := 1; i <= 3; i++ {
		wg.Add(1)
		go tasker(i)
	}
	wg.Wait()
	fmt.Println("Все горутины завершили работу")
}
